name: Deploy static site to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you need Node to build (React/Vite/etc). Remove if plain HTML.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; elif [ -f package.json ]; then npm install; fi

      - name: Build
        run: |
          if [ -f package.json ]; then npm run build; fi

      # Adjust this to your actual build output folder (e.g., dist, out, build)
      - name: Resolve output path
        id: outdir
        run: |
          if [ -d "dist" ]; then echo "out=dist" >> $GITHUB_OUTPUT; \
          elif [ -d "build" ]; then echo "out=build" >> $GITHUB_OUTPUT; \
          elif [ -d "out" ]; then echo "out=out" >> $GITHUB_OUTPUT; \
          else echo "out=." >> $GITHUB_OUTPUT; fi

      # SPA fallback (safe even if not needed)
      - name: Add SPA 404 fallback if index.html exists
        run: |
          if [ -f "${{ steps.outdir.outputs.out }}/index.html" ]; then \
          cp "${{ steps.outdir.outputs.out }}/index.html" "${{ steps.outdir.outputs.out }}/404.html"; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.outdir.outputs.out }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
